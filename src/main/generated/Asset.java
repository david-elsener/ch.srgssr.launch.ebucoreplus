// generated by com.github.vladislavsevruk:java-class-generator
package ch.srgssr.launch.planning.campaigns;

import java.lang.java.lang.String;

import lombok.Data;
import lombok.experimental.Accessors;

@Accessors(chain = true)
@Data
public class Asset {

    private Picture hasRelatedPicture;

    private Instant dateProduced;

    private Licensing hasLicensing;

    private Instant dateCreated;

    private EditorialObject hasRelatedEditorialObject;

    private IPRRestrictions hasIPRRestrictions;

    private Identifier hasIdentifier;

    private Disclaimer hasDisclaimer;

    private Record hasRelatedRecord;

    private Asset isReplacedBy;

    private Agent hasParticipatingAgent;

    private Instant dateModified;

    private Artefact hasRelatedArtefact;

    private CoverageRestrictions hasCoverageRestrictions;

    private boolean orderedFlag;

    private UsageRestrictions hasUsageRestrictions;

    private Resource hasRelatedResource;

    private Instant dateDistributed;

    private Copyright hasCopyright;

    private Instant dateLicenseEnd;

    private Instant datelicensedStart;

    private Contact hasContact;

    private CreativeCommons hasCreativeCommons;

    private Asset replaces;

    private Asset isChildOf;

    private java.lang.String name;

    private Instant dateArchived;

    private UsageRights hasUsageRights;

    private Rights isCoveredBy;

    private Asset hasRelatedAsset;

    private Asset derivedTo;

    private java.lang.String description;

    private Instant dateReleased;

    private Instant dateDeleted;

    private AuditReport hasRelatedAuditReport;

    private Asset isParentOf;

    private AccessConditions hasAccessConditions;

    private RightsClearance hasRightsClearance;

    private Concept objectType;

    private AssetValue hasAssetValue;

    private ExploitationIssues hasExploitationIssues;

    private Asset isDerivedFrom;
}
