// generated by com.github.vladislavsevruk:java-class-generator
package ch.srgssr.launch.planning.campaigns;

import ch.srgssr.launch.common.Locator;
import ch.srgssr.launch.legal.assets.Agent;
import ch.srgssr.launch.legal.assets.Identifier;
import ch.srgssr.launch.legal.assets.ResonanceEvent;

import lombok.Data;
import lombok.experimental.Accessors;

/**
*the aggregation of ResonanceEvents to indicate performance of a content or a
            service
        
*
*<pre>
Examples:
*- market share of viewers on a sports live broadcast
            - weekly page impressions of a news website
            - number of daily unique users on a news website
            - number of likes on an instagram post
            - number of views of a movie from a VOD portal
        
</pre>
*/@Accessors(chain = true)
@Data
public class ResonanceCount {

/**
*The Agent who analyses data to define a Resonance.
*
*/    private Agent isMeasuredBy;

/**
*A locator from where the Resource can be accessed.
*
*/    private Locator locator;

/**
*The designation of the resource.
*
*/    private String name;

/**
*A summary of the resource.
*
*/    private String description;

/**
*One of the ResonanceEvents aggregated into a meaningfulf set of Resonance
            data.
        
*
*/    private ResonanceEvent compilesResonanceEvents;

/**
*To associate an Identifier with an Asset.
*
*/    private Identifier identifier;
}
