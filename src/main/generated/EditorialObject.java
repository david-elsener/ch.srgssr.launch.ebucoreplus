// generated by com.github.vladislavsevruk:java-class-generator
package ch.srgssr.launch.planning.campaigns;

import java.lang.java.lang.String;

import lombok.Data;
import lombok.experimental.Accessors;

@Accessors(chain = true)
@Data
public class EditorialObject {

    private Contract isCommissionedBy;

    private java.lang.String position;

    private Concept hasGenre;

    private Instant dateBroadcast;

    private BibliographicalObject references;

    private EditorialObject existsAs;

    private Language hasDubbedLanguage;

    private boolean orderedFlag;

    private Resource hasRelatedResource;

    private ResonanceEvent hasRelatedResonanceEvent;

    private EditorialObject isVersionOf;

    private Agent approvedBy;

    private TimelinePoint duration;

    private AudioContent hasRelatedAudioContent;

    private java.lang.String pubStatus;

    private EditorialObject hasParentEditorialObject;

    private Agent hasProducer;

    private Character hasCharacter;

    private Resource hasManifestation;

    private java.lang.String hasCoverage;

    private Concept versionType;

    private EditorialObject hasTopic;

    private Captioning hasCaptioning;

    private int partTotalNumber;

    private java.lang.String shotLog;

    private CastMember hasCastMember;

    private Location coversLocation;

    private EditorialObject requires;

    private java.lang.String tableOfContent;

    private Artefact hasRelatedArtefact;

    private Keyword hasKeyword;

    private MediaResource isInstantiatedBy;

    private java.lang.String contentDescription;

    private TimelinePoint resourceOffset;

    private java.lang.String comments;

    private MediaResource hasRelatedMediaResource;

    private java.lang.String resolution;

    private Involvement hasCreator;

    private java.lang.String abstract;

    private TimelineTrack isTimelineTrackPartOf;

    private Instant dateIssued;

    private Language hasOriginalLanguage;

    private java.lang.String orientation;

    private Brand isBrand;

    private EditorialSegment hasPart;

    private TimelinePoint start;

    private EditorialObject isReferencedBy;

    private BibliographicalObject isReferencedBy;

    private PublicationChannel hasTargetChannel;

    private Event hasRelatedEvent;

    private TimelinePoint end;

    private java.lang.String summary;

    private Location hasLocation;

    private PublicationHistory hasPublicationHistory;

    private EditorialObject hasVersion;

    private TextLine hasRelatedTextLine;

    private AudioDescription hasAudioDescription;

    private EditorialObject references;

    private PublicationService isDistributedOn;

    private EditorialObject isRequiredBy;

    private EditorialObject isPreviousInSequence;

    private PublicationPlatform hasTargetPlatform;

    private Signing hasSigning;

    private boolean orderedFlag;

    private java.lang.String synopsis;

    private java.lang.String playlist;

    private PublicationEvent isScheduledOn;

    private java.lang.String folksonomy;

    private EditorialObject isExtractOf;

    private Language hasLanguage;

    private Asset represents;

    private EditorialGroup isMemberOf;

    private MediaFragment hasMediaFragment;

    private java.lang.String script;

    private java.lang.String bookmark;

    private Audience hasTargetAudience;

    private EditorialObject isNextInSequence;

    private Theme hasTheme;

    private CrewMember hasCrewMember;

    private EditorialObject hasRelatedEditorialObject;

    private ProductionJob hasAssociatedProductionJob;

    private boolean midRollAdAllowed;

    private Involvement hasContributor;

    private ContentEditorialFormat hasContentEditorialFormat;

    private Animal hasRelatedAnimal;

    private Involvement hasPublisher;

    private Topic hasTopic;

    private Subtitling hasSubtitling;

    private PublicationService hasTargetService;

    private java.lang.String tag;

    private Subject hasSubject;

    private java.lang.String highlights;

    private boolean rightsClearanceFlag;

    private Event coversEvent;

    private TimelineTrack hasTimelineTrack;

    private java.lang.String productionSynopsis;

    private Review hasReview;

    private Rating hasRating;

    private java.lang.String log;

    private java.lang.String title;

    private AudioProgramme hasRelatedAudioProgramme;

    private java.lang.String promotionalInformation;

    private EditorialObject isEditorialFormatOf;

    private AlternativeTitle hasAlternativeTitle;

    private Award hasRelatedAward;
}
