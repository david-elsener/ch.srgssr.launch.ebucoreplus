// generated by com.github.vladislavsevruk:java-class-generator
package ch.srgssr.launch.planning.campaigns;

import java.lang.java.lang.String;

import lombok.Data;
import lombok.experimental.Accessors;

@Accessors(chain = true)
@Data
public class PublicationEvent {

    private AccessConditions hasAccessConditions;

    private TimelinePoint duration;

    private java.lang.String title;

    private java.lang.String description;

    private AlternativeTitle hasAlternativeTitle;

    private Rights isCoveredBy;

    private Instant startDateTime;

    private UsageRestrictions hasUsageRestrictions;

    private Instant publicationScheduleDate;

    private boolean firstShowing;

    private boolean firstShowingThisService;

    private Identifier hasIdentifier;

    private EditorialObject publishes;

    private ConsumptionCount hasConsumptionCount;

    private Instant endDateTime;

    private Location hasPublicationRegion;

    private CoverageRestrictions hasCoverageRestrictions;

    private Essence playsOut;

    private PublicationService isReleasedBy;

    private Audience hasRestrictedAudience;

    private boolean free;

    private PublicationMedium hasPublicationMedium;

    private ConsumptionEvent hasConsumptionEvent;

    private java.lang.String abstract;

    private boolean live;

    private PublicationEvent hasPublicationEvent;

    private Audience hasTargetAudience;

    private PublicationChannel hasPublicationChannel;

    private java.lang.String name;

    private Concept objectType;
}
